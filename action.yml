name: Python Executable Builder Action
author: '@kentsx'
description: Package python scripts into executables for different OS's, and upload to release / b2
branding: 
  icon: package
  color: green

inputs:
  main:
    description: 'the main python file (without .py)'
    required: true
  dist:
    description: 'the dist path'
    required: false
    default: './dist'
  python_version:
    description: 'the version of python'
    required: false
    default: '3.9'
  pyinstaller_version:
    description: 'the version of pyinstaller'
    required: false
    default: '6.7'
  exe_name:
    description: 'the output exe name'
    required: false
    default: 'main'
  use-dependencies:
    description: 'whether to install requirements.txt before build, which is in the root dir'
    required: false
    default: true
  no-console:
    description: 'whether to disappear console terminal'
    required: false
    default: true
  icon:
    description: 'add the icon mark into your executable, the file path of your ico, e.g. logo.png or logo.ico'
    required: false
    default: 'NONE'
  artifact:
    description: 'Whether upload the build executable to artifact'
    required: false
    default: false
  compression_level:
    description: 'The level of compression for Zlib to be applied to the artifact archive, range from 0(no compression) to 9(max compression)'
    required: false
    default: 6
  release:
    description: 'Whether create a release with the executable'
    required: false
    default: true
  token:
    description: 'The Github token. Make sure you have the permission to create release.'
    required: false
    default: ${{ github.token }}
  tag:
    description: 'An optional tag for the release. If this is omitted the git ref will be used (if it is a tag).'
    required: false
    default: ${{ github.ref_name }}-Run#${{ github.run_id }}-Attempt#${{ github.run_attempt }}
  bodyfile:
    description: 'An optional body file for the release. This should be the path to the file'
    required: false
    default: ''
  version_file_path: 
    description: 'The path of your version.py file (file name can be different). It must contains a variable "VER"'
    required: false
    default: ''


runs:
  using: "composite"
  steps: 
    - name: (Checkout) repository
      uses: actions/checkout@v4

    - name: (Setup) Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python_version }}
        cache: 'pip'

    - name: (Check) for version
      id: version
      if: ${{ inputs.version_file_path != '' }}
      shell: bash
      run: python "${{ github.action_path }}/src/get_version.py"
      env:
        version_file_path: ${{ inputs.version_file_path }}

    - name: (Build) exe with pyinstaller
      shell: bash
      run: |
        python -m pip install --upgrade pip 
        ${{ inputs.use-dependencies }} && pip install -r requirements.txt
        [ ${{ inputs.icon }} != "NONE" ] && pip install Pillow
        ${{ inputs.no-console }} && NO_CONSOLE=--noconsole
        [ ${{ inputs.icon }} != "NONE" ] && ICON=--icon=${{ inputs.icon }}
        pip install pyinstaller==${{ inputs.pyinstaller_version }}
        pyinstaller --clean -y --dist ${{ inputs.dist }} $NO_CONSOLE $ICON --name ${{ inputs.exe_name }} --onefile ${{ inputs.main }}.py
        chown -R --reference=. ${{ inputs.dist }}

    - name: (Upload) Executable to artifact
      id: artifact_upload
      if: ${{ inputs.artifact == 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.exe_name }}
        path: ${{ inputs.dist }}
        compression-level: ${{ inputs.compression_level }}
    
    - name: (Create) Release
      if: ${{ inputs.release == 'true' && inputs.version_file_path == '' }}
      uses: ncipollo/release-action@v1.14.0
      with:
        artifacts: "${{ inputs.dist }}/*.exe" 
        token: ${{ inputs.token }}
        bodyFile: ${{ inputs.bodyfile }}
        tag: ${{ inputs.tag }}
        allowUpdates: true

    - name: (Create) Release
      if: ${{ inputs.release == 'true' && inputs.version_file_path != '' }}
      uses: ncipollo/release-action@v1.14.0
      with:
        artifacts: "${{ inputs.dist }}/*.exe" 
        token: ${{ inputs.token }}
        bodyFile: ${{ inputs.bodyfile }}
        tag: ${{ steps.version.outputs.version }}
        allowUpdates: true
